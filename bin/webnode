#!/usr/bin/env node
var cwd     = process.cwd(), verb,
    module_dir = __dirname + '/../',
    path    = require('path'),
    options = [],
    FS      = require('fs'),
    program = require('commander'),
    exec    = require('child_process').exec,
    bin_mocha = __dirname + '/../node_modules/.bin/mocha';

program
    .version('1.0.0')
    .option('-c --compiler [value]', 'compilers to specific, defaut is coffee-script')
    .option('-b --boilerplate [value]', 'boilerplate to specific, defaut is coffee-script')
    .option('-R --reporter [value]', 'specify the reporter to use')
    .parse(process.argv);

verb = program.args[0];

if (program.compiler) {
    options.push('--compilers ' + program.compiler);
}

if (program.reporter) {
    options.push('-R ' + program.reporter);
} else {
    options.push('-R spec');
}

switch(verb) {
    case 'test':
        exec(bin_mocha + ' ' + options.join(' ') + ' ' + cwd + '/test', function(err, stdout, stderr) {
            if (stderr) {
                console.log(stderr);
            }
            if (stdout) {
                console.log(stdout);
            }
        });
        break;
    case 'init':
        var boilerplate = program.boilerplate || 'coffee-script',
            project_name = program.args[1],
            boilerplate_path = module_dir + 'boilerplate/' + boilerplate;
        //console.log('cp -r ' + module_dir + 'boilerplate/' + boilerplate + '/*' + ' ' + cwd);
        console.log('initializing...');
        exec('cp -r ' + boilerplate_path + '/*' + ' ' + cwd, function(err, stdout, stderr) {
            console.log('project file created.');
            if (!stderr) {
                if (project_name) {
                    var package_json = require(boilerplate_path + '/package');
                    package_json.name = project_name;
                    exec('echo \'' + JSON.stringify(package_json, null, '\t') + '\' > ' + cwd + '/package.json', function(err, stdout, stderr) {
                        console.log('package.json created');
                        if (stderr) {
                            console.log(stderr);
                        } else {
                            console.log('installing packages...');
                            // install package
                            exec('npm install', function(err, stdout, stderr) {
                                console.log(stdout);
                                if (stderr) {
                                    console.log(stderr);
                                }
                                console.log('project created.');
                            });
                        }
                    });
                } else {
                    console.log('installing packages...');
                    // install package
                    exec('npm install', function(err, stdout, stderr) {
                        console.log(stdout);
                        if (stderr) {
                            console.log(stderr);
                        }
                        console.log('project created.');
                    });
                }
            } else {
                console.log(stderr);
            }
        });
        break;
    default:
        console.log('undefined verb.');
}

